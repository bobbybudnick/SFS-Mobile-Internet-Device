#!/bin/bash

#DEPENDENCIES: dnsmasq, iftop and zenity
#New dependency - bridge-utils

#the zte mf861 devices has a fixed ip for lan
#the ip is always 192.168.1.1
#conflicts with usb0 needing this for routing
#before it was private ethernet to public wan
#now bridged ethernet to zte private ethernet

#disable predictable device naming
#edit grub kernel line with net.ifnames=0
#another evil scheme with an orwellian name
#this is some typical redhat poetteringware
#screws up the network device naming

#original router script cleaned up

if ! kdialog --title "Calibration Check" --warningcontinuecancel "Press continue to run the router app"
#if ! zenity --question --text "Press Continue to run the router app"
then
exit
fi

#determine WAN port
WAN=ppp0
WAN_CHECK_1=$(sudo ifconfig | grep wwan0 | wc -l)
if [ $WAN_CHECK_1 -gt 0 ]
then
WAN=wwan0
fi
WAN_CHECK_2=$(sudo ifconfig | grep usb0 | wc -l)
if [ $WAN_CHECK_2 -gt 0 ]
then
WAN=usb0
fi

#establish bridge
sudo ifconfig eth0 up
sudo brctl addbr br0
sudo brctl addif br0 $WAN eth0
sudo ifconfig br0 up

#set ethernet ip manually and ppp0 is automatic from wvdial
#sudo ifconfig eth0 up
#sudo ifconfig enxe0000010195b up
#sudo ifconfig eth0 192.168.1.1
#sudo ifconfig enxe0000010195b 192.168.1.1

#pass traffic from subnet to subnet
#sudo sh -c "echo '1' >> /proc/sys/net/ipv4/ip_forward"

#don't block any traffic to or from the lan specifically
#an inverse rule does not make sense here
#because things go to and from ppp0 freely because it is router
#no it is supposed to block all on wan until a rule is made
#redundant - accepted by default
#sudo iptables -A FORWARD -i eth0 -j ACCEPT
#sudo iptables -A FORWARD -o eth0 -j ACCEPT

#all traffic is translated going out of ppp0
#sudo iptables -t nat -A POSTROUTING -o $WAN -j MASQUERADE

#traffic forwarding which specifically unblocks also?
#sudo iptables -t nat -A PREROUTING -i ppp0 -p tcp --dport 80 -J DNAT--to 192.168.1.10:80

sudo iftop -p -i $WAN

echo "Shutting Down Router"
sudo ifconfig br0 down
sudo brctl delbr br0
#sudo ifconfig eth0 0.0.0.0
#sudo ifconfig enxe0000010195b 0.0.0.0
#sudo ifconfig eth0 down
#sudo ifconfig enxe0000010195b down

#fi #read

