#!/bin/bash

#this assumes a us location with a non changing mcc and mnc

#CHOICE=$( kdialog --radiolist "Debug Menu" 1 "Update time with NTP" on 2 "Reset notification light" off 3 "Retrieve 3GPP location data" off 4 "Retrieve time without NTP" off 5 "Delete SMS databases" off 6 "Delete ModemManager config" off 7 "Low Power" off 8 "High Power" off 9 "Portrait" off 10 "Landscape" off 11 "Shutdown" off 12 "Reboot" off)
CHOICE=$( kdialog --radiolist "Debug Menu" 1 "Delete SMS databases" off 2 "Delete ModemManager config" off 3 "Low Power" off 4 "High Power" off 5 "Shutdown" off 6 "Reboot" off 7 "Reacquire IP" off 8 "Set for external" off 9 "Set for standalone" off)
#if [ "$CHOICE" -eq 1 ]
#then
#sudo ntpdate time.nist.gov
#kdialog --msgbox "Time should sync soon - do dpkg-reconfigure tzdata to set timezone"
#fi
#if [ "$CHOICE" -eq 2 ]
#then
#echo 0 > FLASH_MODE
#echo 0 > SECURE_BLINKING
#kdialog --msgbox "variables have been zeroed and should stop light if no missed communications"
#fi
#if [ "$CHOICE" -eq 3 ]
#then

#sed -i '10s/.*/      "locationAreaCode": 99999,/' TEST.json

#extract cell id from mmcli
#CELL_ID=$(sudo mmcli --location-get -m 0 | cut -d ":" -f2 | head -n7 | tail -n 1 | tr -d \')
#extract lac from mmcli
#LAC=$(sudo mmcli --location-get -m 0 | cut -d ":" -f2 | head -n6 | tail -n 1 | tr -d \')
#edit JSON request file with both cell id and lac
#eval needed for sed to interpret variables
#eval "sed -i '9s/.*/      "cellId": $CELL_ID,/' TEST.json"
#eval "sed -i '10s/.*/      "locationAreaCode": $LAC,/' TEST.json"

#send request
#LOCATION=$(curl -k -d @TEST.json -H "Content-Type: application/json" -i "https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyAOJrU_GJIPDyULw50Jrvu7qrydwED5tYA")

#kdialog --msgbox "$LOCATION"

#if kdialog --title "Logging" --warningcontinuecancel "`echo $LOCATION`"
#if kdialog --title "Logging" --warningcontinuecancel "Press continue to log to file"
#then
#echo $LOCATION >> LOCATION
#fi
#fi

#if [ "$CHOICE" -eq 4 ]
#then
#TIME=$(nc time.nist.gov 13)

#TIME_1=$(echo "$TIME" | cut -d' ' -f2)
#TIME_2=$(echo "$TIME" | cut -d' ' -f3)

#FORMATTED_TIME="$TIME_1 $TIME_2 UTC ET -5"

#echo $FORMATTED_TIME
#kdialog --msgbox "$FORMATTED_TIME"
#fi

if [ "$CHOICE" -eq 1 ]
then
sudo rm -r /root/.local/share/modem-manager-gui
sudo rm -r /home/pi/.local/share/modem-manager-gui
fi

if [ "$CHOICE" -eq 2 ]
then
sudo rm -r /home/pi/.config/modem-manager-gui/
fi

if [ "$CHOICE" -eq 3 ]
then
#sudo cpupower frequency-set --governor powersave
sudo sh -c "echo '5000000' >> /sys/devices/virtual/powercap/intel-rapl/intel-rapl:0/constraint_0_power_limit_uw"
fi

if [ "$CHOICE" -eq 4 ]
then
#sudo cpupower frequency-set --governor performance
#sudo cpupower frequency-set -u 2200Mhz -d 2200Mhz
sudo sh -c "echo '7000000' >> /sys/devices/virtual/powercap/intel-rapl/intel-rapl:0/constraint_0_power_limit_uw"
fi

#if [ "$CHOICE" -eq 5 ]
#then
#/home/pi/PORTRAIT_MODE
#fi

#if [ "$CHOICE" -eq 6 ]
#then
#/home/pi/LANDSCAPE_MODE
#fi

if [ "$CHOICE" -eq 5 ]
then
sudo shutdown -h now
fi

if [ "$CHOICE" -eq 6 ]
then
sudo reboot
fi

if [ "$CHOICE" -eq 7 ]
then
sudo dhclient wwan0
fi

if [ "$CHOICE" -eq 8 ]
then
xrandr --output DP1 --mode 1920x1080 --output HDMI1 --mode 1920x1080 --rotate normal
cp /home/pi/asoundrc.EXTERNAL /home/pi/.asoundrc
/home/pi/TOUCH_EXTERNAL
fi

if [ "$CHOICE" -eq 9 ]
then
xrandr --output DP1 --off --output HDMI1 --mode 1280x720 --rotate right
cp /home/pi/asoundrc.STANDALONE_STANDARD /home/pi/.asoundrc
/home/pi/TOUCH_STANDALONE
fi

